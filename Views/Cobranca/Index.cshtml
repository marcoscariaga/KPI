@{
    ViewData["Title"] = "Total arrecadado por ano";
}
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/funnel.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

@using Highsoft.Web.Mvc.Charts
@using Highsoft.Web.Mvc.Charts.Rendering
@model List<KPI.Models.CobrancaSisvisa>
@{
    var chartOptions = new Highcharts
    {
        Title = new Title
        {
            Text = "Total arrecadado por ano"
        },
        XAxis = new List<XAxis> {
        new XAxis {
                Categories = new List <string> {"2019","2020","2021","2022","2023","2024"}
            }
        },
        YAxis = new List<YAxis> {
        new YAxis {
            Title = new YAxisTitle { Text = "Valores" },
            PlotLines = new List<YAxisPlotLines> { new YAxisPlotLines { Value = 0, Width = 1, Color = "#808080" } }
            }
        },
        Tooltip = new Tooltip
        {
            Enabled = true,
            //Shared = true,
            HeaderFormat = "<span style='color:{point.color}'><b>⦿</b></span> <span style='font-size:14px'><b>Ano: {point.key}</b></span><br>",
            PointFormat = "<table style='font-size:12px'><tr><td>{series.name}</td><td> - R${point.y:.2f}</td></tr></table>",
            //Formatter = @"function() { return '<b>' + this.x + '</b><br/>' + 'Total: R$ ' + this.y; }",
            //BackgroundColor = "rgba(255, 255, 255, 0.85)",
            //BorderColor = "rgba(0, 0, 0, 0.5)",
            //BorderWidth = 2,
            //FollowPointer = true,
            UseHTML = true
            //Distance = 10, // Set the distance from point to tooltip
            //Padding = 8, // Set padding inside the tooltip
            //HideDelay = 200 // Set the delay before the tooltip disappears
        },
        Legend = new Legend
        {
            Layout = LegendLayout.Vertical,
            Align = LegendAlign.Right,
            VerticalAlign = LegendVerticalAlign.Middle,
            Title = new LegendTitle { Text = "Código Receita:" },
            BorderWidth = 0
        },
        Series = new List<Series> {
        new LineSeries { Name = "5207 (x100)", Data = (List<LineSeriesData>)ViewData["cd5207Data"], LineWidth = 2 },
        new LineSeries { Name = "5223", Data = (List<LineSeriesData>)ViewData["cd5223Data"], LineWidth = 2 },
        new LineSeries { Name = "5231", Data = (List<LineSeriesData>)ViewData["cd5231Data"], LineWidth = 2 },
        new LineSeries { Name = "5274", Data = (List<LineSeriesData>)ViewData["cd5274Data"], LineWidth = 2 }
      }
    };

    chartOptions.ID = "chart";
    var renderer = new HighchartsRenderer(chartOptions);
}

<div class="card">
<div class="card-body">
@Html.Raw(renderer.RenderHtml())
</div>
</div>
</br>
<div class="card">
<div class="card-body">
        <h2>Total de arrecadação em @ViewBag.Year</h2><h6>Em @DateTime.Now</h6>
        <p></p>
<table class="table">
    <thead>
        <tr>
            <th>
                Receita 
            </th>
            <th>
                Total de Valores Cobrados
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            string text = string.Empty;
            string code = item.CdReceita.ToString();
            if (code == "5207")
            {
                text = "LSF";
            }
            else if (code == "5223")
            {
                text = "Eventos";
            }
            else if (code == "5231")
            {
                text = "LSAT Outros (Obras)";
            }
            else if (code == "5274")
            {
                text = "Aprovação de Produto Dispensado de Registro";
            }
            <tr>
                <td>
                    @item.CdReceita - @text
                </td>
                <td>
                    @item.VlPrincipal.ToString("C")
                </td>
                <td>
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th>
                Total
            </th>
            <th>
                @ViewBag.Total
            </th>
            <th></th>
        </tr>
    </tfoot>
</table>
</div>
</div>
<div class="loader"></div>